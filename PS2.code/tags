!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
EPSILON	auto_grader.py	/^EPSILON = 0.001$/;"	v
EPSILON	serialized/auto_grader.py	/^EPSILON = 0.001$/;"	v
ID3	ID3_nosetests.py	/^import modules.ID3 as ID3$/;"	i
ID3	modules/ID3.py	/^def ID3(data_set, attribute_metadata, numerical_splits_count, depth):$/;"	f
ID3	serialized/modules/ID3.py	/^def ID3(data_set, attribute_metadata, numerical_splits_count, depth):$/;"	f
Node	modules/ID3.py	/^from node import Node$/;"	i
Node	modules/node.py	/^class Node:$/;"	c
Node	modules/pruning.py	/^from node import Node$/;"	i
Node	serialized/modules/ID3.py	/^from node import Node$/;"	i
Node	serialized/modules/node.py	/^class Node:$/;"	c
Node	serialized/modules/pruning.py	/^from node import Node$/;"	i
Test_check_homogenous	ID3_nosetests.py	/^def Test_check_homogenous():$/;"	f
Test_entropy	ID3_nosetests.py	/^def Test_entropy():$/;"	f
Test_gain_ratio_nominal	ID3_nosetests.py	/^def Test_gain_ratio_nominal():$/;"	f
Test_gain_ratio_numeric	ID3_nosetests.py	/^def Test_gain_ratio_numeric():$/;"	f
Test_mode	ID3_nosetests.py	/^def Test_mode():$/;"	f
Test_pick_best_attribute	ID3_nosetests.py	/^def Test_pick_best_attribute():$/;"	f
Test_split_on_nominal	ID3_nosetests.py	/^def Test_split_on_nominal():$/;"	f
Test_split_on_numerical	ID3_nosetests.py	/^def Test_split_on_numerical():$/;"	f
__init__	modules/node.py	/^    def __init__(self):$/;"	m	class:Node
__init__	serialized/modules/node.py	/^    def __init__(self):$/;"	m	class:Node
check_ID3	auto_grader.py	/^def check_ID3():$/;"	f
check_ID3	serialized/auto_grader.py	/^def check_ID3():$/;"	f
check_classify	auto_grader.py	/^def check_classify():$/;"	f
check_classify	serialized/auto_grader.py	/^def check_classify():$/;"	f
check_entropy	auto_grader.py	/^def check_entropy():$/;"	f
check_entropy	serialized/auto_grader.py	/^def check_entropy():$/;"	f
check_gain_ratio_nom	auto_grader.py	/^def check_gain_ratio_nom():$/;"	f
check_gain_ratio_nom	serialized/auto_grader.py	/^def check_gain_ratio_nom():$/;"	f
check_gain_ratio_num	auto_grader.py	/^def check_gain_ratio_num():$/;"	f
check_gain_ratio_num	serialized/auto_grader.py	/^def check_gain_ratio_num():$/;"	f
check_homogenous	modules/ID3.py	/^def check_homogenous(data_set):$/;"	f
check_homogenous	serialized/modules/ID3.py	/^def check_homogenous(data_set):$/;"	f
check_mode	auto_grader.py	/^def check_mode():$/;"	f
check_mode	serialized/auto_grader.py	/^def check_mode():$/;"	f
check_split_on_nominal	auto_grader.py	/^def check_split_on_nominal():$/;"	f
check_split_on_nominal	serialized/auto_grader.py	/^def check_split_on_nominal():$/;"	f
classify	modules/node.py	/^    def classify(self, instance):$/;"	m	class:Node
classify	serialized/modules/node.py	/^    def classify(self, instance):$/;"	m	class:Node
collections	modules/parse.py	/^import csv, collections$/;"	i
collections	serialized/modules/parse.py	/^import csv, collections$/;"	i
create_data_set	auto_grader.py	/^def create_data_set(typ):$/;"	f
create_data_set	serialized/auto_grader.py	/^def create_data_set(typ):$/;"	f
create_predictions	modules/predictions.py	/^def create_predictions(tree, predict):$/;"	f
create_predictions	serialized/modules/predictions.py	/^def create_predictions(tree, predict):$/;"	f
csv	modules/parse.py	/^import csv, collections$/;"	i
csv	serialized/modules/parse.py	/^import csv, collections$/;"	i
decision_tree_driver	decision_tree_driver.py	/^def decision_tree_driver(train, validate = False, predict = False, prune = False,$/;"	f
decision_tree_driver	serialized/decision_tree_driver.py	/^def decision_tree_driver(train, validate = False, predict = False, prune = False,$/;"	f
entropy	modules/ID3.py	/^def entropy(data_set):$/;"	f
entropy	serialized/modules/ID3.py	/^def entropy(data_set):$/;"	f
func_check_homogenous_end	ID3_nosetests.py	/^def func_check_homogenous_end():$/;"	f
func_check_homogenous_start	ID3_nosetests.py	/^def func_check_homogenous_start():$/;"	f
func_entropy_end	ID3_nosetests.py	/^def func_entropy_end():$/;"	f
func_entropy_start	ID3_nosetests.py	/^def func_entropy_start():$/;"	f
func_gain_ratio_nominal_end	ID3_nosetests.py	/^def func_gain_ratio_nominal_end():$/;"	f
func_gain_ratio_nominal_start	ID3_nosetests.py	/^def func_gain_ratio_nominal_start():$/;"	f
func_gain_ratio_numeric_end	ID3_nosetests.py	/^def func_gain_ratio_numeric_end():$/;"	f
func_gain_ratio_numeric_start	ID3_nosetests.py	/^def func_gain_ratio_numeric_start():$/;"	f
func_mode_end	ID3_nosetests.py	/^def func_mode_end():$/;"	f
func_mode_start	ID3_nosetests.py	/^def func_mode_start():$/;"	f
func_pick_best_attribute_end	ID3_nosetests.py	/^def func_pick_best_attribute_end():$/;"	f
func_pick_best_attribute_start	ID3_nosetests.py	/^def func_pick_best_attribute_start():$/;"	f
func_split_on_nominal_end	ID3_nosetests.py	/^def func_split_on_nominal_end():$/;"	f
func_split_on_nominal_start	ID3_nosetests.py	/^def func_split_on_nominal_start():$/;"	f
func_split_on_numerical_end	ID3_nosetests.py	/^def func_split_on_numerical_end():$/;"	f
func_split_on_numerical_start	ID3_nosetests.py	/^def func_split_on_numerical_start():$/;"	f
gain_ratio_nominal	modules/ID3.py	/^def gain_ratio_nominal(data_set, attribute):$/;"	f
gain_ratio_nominal	serialized/modules/ID3.py	/^def gain_ratio_nominal(data_set, attribute):$/;"	f
gain_ratio_numeric	modules/ID3.py	/^def gain_ratio_numeric(data_set, attribute, steps):$/;"	f
gain_ratio_numeric	serialized/modules/ID3.py	/^def gain_ratio_numeric(data_set, attribute, steps):$/;"	f
get_graph	modules/graph.py	/^def get_graph(train_set, attribute_metadata, validate_set, numerical_splits_count, depth, iterations, lower, upper, increment):$/;"	f
get_graph	serialized/modules/graph.py	/^def get_graph(train_set, attribute_metadata, validate_set, numerical_splits_count, depth, iterations, lower, upper, increment):$/;"	f
get_graph_accuracy_partial	modules/graph.py	/^def get_graph_accuracy_partial(train_set, attribute_metadata, validate_set, numerical_splits_count, pct):$/;"	f
get_graph_accuracy_partial	serialized/modules/graph.py	/^def get_graph_accuracy_partial(train_set, attribute_metadata, validate_set, numerical_splits_count, pct):$/;"	f
get_graph_data	modules/graph.py	/^def get_graph_data(train_set, attribute_metadata, validate_set, numerical_splits_count, iterations, pcts):$/;"	f
get_graph_data	serialized/modules/graph.py	/^def get_graph_data(train_set, attribute_metadata, validate_set, numerical_splits_count, iterations, pcts):$/;"	f
grader	auto_grader.py	/^def grader(homogenous=False,p_best_attribute=False,mode=False,entropy=False,gain_ratio_nominal=False,split_on_nominal=False,split_on_numerical=False, gain_ratio_numeric=False, classify=False):$/;"	f
grader	serialized/auto_grader.py	/^def grader(homogenous=False,p_best_attribute=False,mode=False,entropy=False,gain_ratio_nominal=False,split_on_nominal=False,split_on_numerical=False, gain_ratio_numeric=False, classify=False):$/;"	f
loadPickle	modules/pickled.py	/^def loadPickle(filename):$/;"	f
loadPickle	serialized/modules/pickled.py	/^def loadPickle(filename):$/;"	f
makePickle	modules/pickled.py	/^def makePickle(obj, filename):$/;"	f
makePickle	serialized/modules/pickled.py	/^def makePickle(obj, filename):$/;"	f
math	modules/ID3.py	/^import math$/;"	i
math	serialized/modules/ID3.py	/^import math$/;"	i
matplotlib	modules/graph.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	serialized/modules/graph.py	/^import matplotlib.pyplot as plt$/;"	i
mode	modules/ID3.py	/^def mode(data_set):$/;"	f
mode	serialized/modules/ID3.py	/^def mode(data_set):$/;"	f
modules	ID3_nosetests.py	/^import modules.ID3 as ID3$/;"	i
options	auto_grader.py	/^options = {$/;"	v
options	decision_tree_driver.py	/^options = {$/;"	v
options	serialized/auto_grader.py	/^options = {$/;"	v
options	serialized/decision_tree_driver.py	/^options = {$/;"	v
os	modules/graph.py	/^import os.path$/;"	i
os	modules/predictions.py	/^import os.path$/;"	i
os	serialized/modules/graph.py	/^import os.path$/;"	i
os	serialized/modules/predictions.py	/^import os.path$/;"	i
parse	modules/graph.py	/^from parse import parse$/;"	i
parse	modules/parse.py	/^def parse(filename, keep_unlabeled):$/;"	f
parse	serialized/modules/graph.py	/^from parse import parse$/;"	i
parse	serialized/modules/parse.py	/^def parse(filename, keep_unlabeled):$/;"	f
path	modules/graph.py	/^import os.path$/;"	i
path	modules/predictions.py	/^import os.path$/;"	i
path	serialized/modules/graph.py	/^import os.path$/;"	i
path	serialized/modules/predictions.py	/^import os.path$/;"	i
pick_best_attribute	modules/ID3.py	/^def pick_best_attribute(data_set, attribute_metadata, numerical_splits_count):$/;"	f
pick_best_attribute	serialized/modules/ID3.py	/^def pick_best_attribute(data_set, attribute_metadata, numerical_splits_count):$/;"	f
pickle	modules/pickled.py	/^import pickle$/;"	i
pickle	serialized/modules/pickled.py	/^import pickle$/;"	i
plt	modules/graph.py	/^import matplotlib.pyplot as plt$/;"	i
plt	serialized/modules/graph.py	/^import matplotlib.pyplot as plt$/;"	i
print_dnf_tree	modules/node.py	/^    def print_dnf_tree(self):$/;"	m	class:Node
print_dnf_tree	serialized/modules/node.py	/^    def print_dnf_tree(self):$/;"	m	class:Node
print_tree	modules/node.py	/^    def print_tree(self, indent = 0):$/;"	m	class:Node
print_tree	serialized/modules/node.py	/^    def print_tree(self, indent = 0):$/;"	m	class:Node
printing_results	auto_grader.py	/^def printing_results(data_set,result,function):$/;"	f
printing_results	serialized/auto_grader.py	/^def printing_results(data_set,result,function):$/;"	f
random	auto_grader.py	/^import random$/;"	i
random	serialized/auto_grader.py	/^import random$/;"	i
reduced_error_pruning	modules/pruning.py	/^def reduced_error_pruning(root,training_set,validation_set):$/;"	f
reduced_error_pruning	serialized/modules/pruning.py	/^def reduced_error_pruning(root,training_set,validation_set):$/;"	f
setup	ID3_nosetests.py	/^def setup():$/;"	f
shuffle	modules/graph.py	/^from random import shuffle$/;"	i
shuffle	serialized/modules/graph.py	/^from random import shuffle$/;"	i
split_o_num	auto_grader.py	/^def split_o_num(name):$/;"	f
split_o_num	serialized/auto_grader.py	/^def split_o_num(name):$/;"	f
split_on_nominal	modules/ID3.py	/^def split_on_nominal(data_set, attribute):$/;"	f
split_on_nominal	serialized/modules/ID3.py	/^def split_on_nominal(data_set, attribute):$/;"	f
split_on_numerical	modules/ID3.py	/^def split_on_numerical(data_set, attribute, splitting_value):$/;"	f
split_on_numerical	serialized/modules/ID3.py	/^def split_on_numerical(data_set, attribute, splitting_value):$/;"	f
sys	modules/ID3.py	/^import sys$/;"	i
sys	serialized/modules/ID3.py	/^import sys$/;"	i
teardown	ID3_nosetests.py	/^def teardown():$/;"	f
test	auto_grader.py	/^test = grader( **options )/;"	v
test	serialized/auto_grader.py	/^test = grader( **options )/;"	v
tree	decision_tree_driver.py	/^tree = decision_tree_driver( **options )/;"	v
tree	serialized/decision_tree_driver.py	/^tree = decision_tree_driver( **options )/;"	v
validation_accuracy	modules/graph.py	/^from pruning import validation_accuracy$/;"	i
validation_accuracy	modules/pruning.py	/^def validation_accuracy(tree,validation_set):$/;"	f
validation_accuracy	serialized/modules/graph.py	/^from pruning import validation_accuracy$/;"	i
validation_accuracy	serialized/modules/pruning.py	/^def validation_accuracy(tree,validation_set):$/;"	f
with_setup	ID3_nosetests.py	/^from nose import with_setup$/;"	i
xor	modules/graph.py	/^from operator import xor$/;"	i
xor	modules/predictions.py	/^from operator import xor$/;"	i
xor	modules/pruning.py	/^from operator import xor$/;"	i
xor	serialized/modules/graph.py	/^from operator import xor$/;"	i
xor	serialized/modules/predictions.py	/^from operator import xor$/;"	i
xor	serialized/modules/pruning.py	/^from operator import xor$/;"	i
